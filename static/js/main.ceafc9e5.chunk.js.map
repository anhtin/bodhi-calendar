{"version":3,"sources":["utils/environment-variables.ts","store/index.ts","store/settings/vegetarian/index.ts","store/version/index.ts","utils/browser/localStorage.ts","utils/browser/index.ts","store/settings/index.ts","utils/semver.ts","store/settings/vegetarian/data.ts","store/settings/vegetarian/helpers.ts","contexts/DateContext.tsx","utils/helpers.ts","contexts/MessageContext.tsx","contexts/StoreContext.tsx","hooks/contexts.ts","utils/date.ts","utils/colors.ts","components/Calendar/components/Body/styled.ts","components/Calendar/components/Body/Body.tsx","components/Calendar/components/Body/index.ts","components/Calendar/components/Header/styled.ts","components/Calendar/components/Header/Header.tsx","components/Calendar/components/Header/index.ts","components/Calendar/components/OpenSettingsButton/styled.ts","components/Calendar/components/OpenSettingsButton/OpenSettingsButton.tsx","components/Calendar/components/OpenSettingsButton/index.ts","components/Modal/styled.ts","components/Modal/overrides.ts","components/Modal/Modal.tsx","components/Modal/index.ts","components/Calendar/components/SettingsModal/styled.ts","components/Calendar/components/SettingsModal/SettingsModal.tsx","components/Calendar/components/SettingsModal/index.ts","components/Calendar/styled.ts","domain.ts","components/Calendar/Calendar.tsx","components/Flex.tsx","utils/logging.ts","utils/environment.ts","components/ErrorBoundary.tsx","components/MessageBar/styled.ts","components/MessageBar/MessageBar.tsx","components/MessageBar/index.ts","utils/serviceWorker.ts","components/ServiceWorker.tsx","assets/images/logo.svg","components/App/GlobalStyle.ts","components/App/styled.ts","components/App/App.tsx","index.tsx"],"names":["getAppName","getEnvironmentVariable","getAppVersion","UNKNOWN","version","UnknownAppVersionError","Error","getEnvironment","name","defaultValue","process","saveStore","settings","saveSettings","setVersion","initializeStore","localStorage","storeVersion","getVersion","appVersion","isOutdated","updatedVersion","migrateFrom","migrateStoreIfNeccessary","loadSettings","getItem","parseSemver","e","InvalidAppVersion","setItem","isLocaleStorageSupported","window","loadLocal","key","saveLocal","value","JSON","stringify","resetLocal","clear","navigateTo","url","reloadPage","location","assign","reload","setVegetarianSchedule","schedule","getVegetarianSchedule","aVersion","bVersion","aMajor","aMinor","aPatch","bMajor","bMinor","bPatch","compareSemver","result","match","major","minor","patch","Number","parseInt","defaultVegetarianSchedules","pred","day","has30Days","isVegetarianDay","vegetarianDays","includes","SCHEDULE_STORE_KEY","scheduleName","getVegetarianScheduleByName","defaultVegetarianSchedule","getVegetarianSchedules","find","DateContext","createContext","Date","DateProvider","children","useState","currentDate","setCurrentDate","useEffect","timer","setInterval","newDate","isSameDay","clearInterval","Provider","Consumer","createMutableContext","useMutableContext","context","useContext","MessageContext","MessageProvider","messages","setMessages","StoreContext","StoreProvider","store","setStore","useMessages","useStore","NO_LOCALES","locale","getUserLocales","some","nb","enUs","WEEK_DAYS","map","localize","width","formatDate","date","pattern","format","BROWN","GRAY_LIGHT","YELLOW_LIGHT","PRIMARY","Wrapper","styled","table","WeekRow","tr","WeekDay","th","Grid","tbody","GridRow","DateWrapper","td","LunarPart","div","SolarPart","TileWrapper","isVegetarian","isToday","colors","isMonth","WeekdayRow","i","DayTile","Tile","solarDate","isInMonth","aria-label","lunarDay","solarDay","CalendarBody","Body","weeks","week","j","Button","button","TitleWrapper","Year","h1","Month","h2","Header","year","month","onPrevMonth","onNextMonth","formattedYear","formattedMonth","onClick","OpenSettingsButton","header","CloseButtonWrapper","aside","CloseButton","StyleOverrides","createGlobalStyle","ReactModal","setAppElement","Modal","isOpen","onClose","heading","onRequestClose","overlayClassName","className","closeTimeoutMS","contentLabel","Form","Label","label","Select","select","VegetarianScheduleSelect","onUpdate","onChange","currentSettings","newSettingsFromSchedule","target","SettingsModal","visible","onHide","createWeeks","incDate","startOfWeek","addDays","createDay","getMonth","push","getYear","lunarDate","computeDateToLunarDate","getDate","gregorianDate","diff","deltaGregorianDate","of30Days","initialPivot","startOfMonth","Calendar","pivot","setPivot","showSettings","setShowSettings","useMemo","createCalendarView","subMonths","addMonths","Flex","direction","flex","justifyContent","alignItems","style","tag","htmlProps","React","createElement","display","flexDirection","initializeLogging","Sentry","dsn","GenericErrorView","Container","title","RedirectionErrorView","targetUrl","height","padding","textAlign","fontSize","fontWeight","ErrorBoundary","props","state","error","logError","this","Component","section","MessageWrapper","article","Title","MessageBar","length","content","isLocalhost","Boolean","hostname","register","config","navigator","URL","href","origin","registerSW","swUrl","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","registerValidSW","catch","console","log","checkValidServiceWorker","document","readyState","addEventListener","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","ServiceWorker","GlobalStyle","Main","Footer","alt","src","logo","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ceafc9e5.chunk.js","sourcesContent":["export function getAppName(): string {\n  return getEnvironmentVariable('REACT_APP_NAME', 'Bodhi Calendar');\n}\n\nexport function getAppVersion(): string {\n  const UNKNOWN = 'UNKOWN';\n  const version = getEnvironmentVariable('REACT_APP_VERSION', UNKNOWN);\n  if (version === UNKNOWN) {\n    throw new UnknownAppVersionError('Failed to resolve app version.');\n  }\n  return version;\n}\n\nexport class UnknownAppVersionError extends Error {}\n\nexport function getEnvironment(): string {\n  return getEnvironmentVariable('NODE_ENV', 'production');\n}\n\nfunction getEnvironmentVariable(name: string, defaultValue: string): string {\n  return process.env[name] || defaultValue;\n}\n","import { getAppVersion } from 'utils/environment-variables';\nimport { isOutdated } from 'utils/semver';\nimport { getVegetarianSchedule } from './settings/vegetarian';\nimport { getVersion, setVersion } from './version';\nimport { saveSettings, Settings, loadSettings } from './settings';\n\nexport type Store = {\n  settings: Settings;\n  version: string;\n};\n\nexport function resetStore() {\n  const store = createInitialStore();\n  saveStore(store);\n}\n\nfunction createInitialStore(): Store {\n  return {\n    settings: {\n      schedule: getVegetarianSchedule(),\n    },\n    version: getAppVersion(),\n  };\n}\n\nexport function saveStore({ settings, version }: Store) {\n  saveSettings(settings);\n  setVersion(version);\n}\n\nexport function initializeStore(): Store {\n  migrateStoreIfNeccessary();\n  return loadStore();\n}\n\nexport function loadStore(): Store {\n  return {\n    settings: loadSettings(),\n    version: getVersion(),\n  };\n}\n\nfunction migrateStoreIfNeccessary(): void {\n  if (localStorage) {\n    const storeVersion = getVersion();\n    const appVersion = getAppVersion();\n    if (isOutdated(storeVersion, appVersion)) {\n      migrateFrom(storeVersion);\n    }\n  }\n}\n\nfunction migrateFrom(version: string) {\n  // TODO: Migration code (when relevant)\n\n  const updatedVersion = getAppVersion();\n  setVersion(updatedVersion);\n}\n\nexport * from './settings';\nexport * from './version';\n","export * from './helpers';\nexport * from './types';\n","import { getAppVersion } from 'utils/environment-variables';\nimport { parseSemver } from 'utils/semver';\n\nexport function getVersion(): string {\n  const version = localStorage.getItem('version') || getAppVersion();\n\n  try {\n    parseSemver(version);\n  } catch (e) {\n    throw new InvalidAppVersion(`Invalid app version detected: ${version}.`);\n  }\n\n  return version;\n}\n\nexport function setVersion(version: string) {\n  localStorage.setItem('version', version);\n}\n\nexport class InvalidAppVersion extends Error { }\n","\nconst isLocaleStorageSupported = 'localStorage' in window;\n\nexport function loadLocal(key: string): string | null {\n  if (isLocaleStorageSupported) {\n    return localStorage.getItem(key);\n  }\n  return null;\n}\n\nexport function saveLocal(key: string, value: unknown) {\n  if (isLocaleStorageSupported) {\n    localStorage.setItem(\n      key,\n      typeof value === 'string' ? value : JSON.stringify(value)\n    );\n  }\n}\n\nexport function resetLocal() {\n  localStorage.clear();\n}\n","export * from './localStorage';\n\nexport function navigateTo(url = '.') {\n  if (url === '.') {\n    reloadPage();\n  } else {\n    window.location.assign(url);\n  }\n}\n\nexport function reloadPage() {\n  window.location.reload();\n}\n","import {\n  getVegetarianSchedule,\n  setVegetarianSchedule,\n  VegetarianSchedule,\n} from './vegetarian';\n\nexport type Settings = {\n  schedule: VegetarianSchedule;\n};\n\nexport function saveSettings(settings: Settings) {\n  setVegetarianSchedule(settings.schedule);\n}\n\nexport function loadSettings() {\n  return {\n    schedule: getVegetarianSchedule(),\n  };\n}\n\nexport * from './vegetarian';\n","\nexport function isOutdated(aVersion: string, bVersion: string): boolean {\n  const a = parseSemver(aVersion);\n  const b = parseSemver(bVersion);\n  return compareSemver(a, b) < 0;\n}\n\ntype Semver = [number, number, number];\n\nexport function compareSemver(\n  [aMajor, aMinor, aPatch]: Semver,\n  [bMajor, bMinor, bPatch]: Semver\n): number {\n  if (aMajor < bMajor) return -1;\n  if (aMajor > bMajor) return 1;\n  if (aMinor < bMinor) return -1;\n  if (aMinor > bMinor) return 1;\n  if (aPatch < bPatch) return -1;\n  if (aPatch > bPatch) return 1;\n  return 0;\n}\n\nexport function parseSemver(version: string): Semver {\n  const semverPattern = /(\\d+)\\.(\\d+)\\.(\\d+)/;\n  const result = version.match(semverPattern);\n  if (!result) {\n    throw new Error(`Failed to parse semver from string: ${version}`)\n  }\n\n  const [, major, minor, patch] = result;\n  return [\n    Number.parseInt(major),\n    Number.parseInt(minor),\n    Number.parseInt(patch)\n  ];\n}\n","import { VegetarianSchedule } from './types';\n\nexport const defaultVegetarianSchedules: VegetarianSchedule[] = [\n  {\n    name: '10 days a month',\n    pred: (day: number, has30Days: boolean): boolean =>\n      isVegetarianDay(\n        day,\n        has30Days\n          ? [1, 8, 14, 15, 18, 23, 24, 28, 29, 30]\n          : [1, 8, 14, 15, 18, 23, 24, 27, 28, 29]\n      ),\n  },\n  {\n    name: '8 days a month',\n    pred: (day: number, has30Days: boolean): boolean =>\n      isVegetarianDay(\n        day,\n        has30Days\n          ? [1, 8, 14, 15, 18, 23, 24, 30]\n          : [1, 8, 14, 15, 18, 23, 24, 29]\n      ),\n  },\n  {\n    name: '6 days a month',\n    pred: (day: number, has30Days: boolean): boolean =>\n      isVegetarianDay(\n        day,\n        has30Days ? [1, 8, 14, 15, 23, 30] : [1, 8, 14, 15, 23, 29]\n      ),\n  },\n  {\n    name: '4 days a month',\n    pred: (day: number, has30Days: boolean): boolean =>\n      isVegetarianDay(day, has30Days ? [1, 14, 15, 30] : [1, 14, 15, 29]),\n  },\n  {\n    name: '2 days a month',\n    pred: (day: number, has30Days: boolean): boolean =>\n      isVegetarianDay(day, has30Days ? [1, 15] : [1, 15]),\n  },\n];\n\nfunction isVegetarianDay(day: number, vegetarianDays: number[]): boolean {\n  return vegetarianDays.includes(day);\n}\n","import { defaultVegetarianSchedules } from './data';\n\nimport { saveLocal, loadLocal } from 'utils/browser';\nimport { VegetarianSchedule } from './types';\n\nconst SCHEDULE_STORE_KEY = 'schedule';\n\nexport function setVegetarianSchedule(schedule: VegetarianSchedule): void {\n  saveLocal(SCHEDULE_STORE_KEY, schedule);\n}\n\nexport function getVegetarianSchedule(): VegetarianSchedule {\n  const scheduleName = loadLocal(SCHEDULE_STORE_KEY);\n  if (scheduleName) {\n    const schedule = getVegetarianScheduleByName(scheduleName);\n    if (schedule) {\n      return schedule;\n    }\n  }\n\n  const defaultVegetarianSchedule = defaultVegetarianSchedules[0];\n  saveLocal(SCHEDULE_STORE_KEY, defaultVegetarianSchedule.name);\n  return defaultVegetarianSchedule;\n}\n\nexport function getVegetarianScheduleByName(\n  name: string\n): VegetarianSchedule | undefined {\n  return getVegetarianSchedules().find((schedule): boolean =>\n    schedule.name === name\n  );\n}\n\nexport function getVegetarianSchedules(): VegetarianSchedule[] {\n  return defaultVegetarianSchedules;\n}\n","import React, { useState, useEffect, createContext, HTMLProps } from 'react';\nimport { isSameDay } from 'date-fns';\n\nconst DateContext = createContext(new Date());\n\nexport function DateProvider({ children }: HTMLProps<HTMLElement>) {\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const newDate = new Date();\n      if (!isSameDay(currentDate, newDate)) {\n        setCurrentDate(newDate);\n      }\n    }, 60000);\n\n    return () => clearInterval(timer);\n  });\n\n  return (\n    <DateContext.Provider value={currentDate}>{children}</DateContext.Provider>\n  );\n}\n\nexport const DateConsumer = DateContext.Consumer;\n\nexport default DateContext;\n","import {\n  useContext,\n  createContext,\n  Context,\n  Dispatch,\n  SetStateAction,\n} from 'react';\n\ntype MutableContext<T> = Context<(T | MutableContextUpdate<T>)[]>;\ntype MutableContextValue<T> = [T, MutableContextUpdate<T>];\ntype MutableContextUpdate<T> = Dispatch<SetStateAction<T>>;\n\nexport function createMutableContext<T>(defaultValue: T | null = null) {\n  return createContext([\n    defaultValue as T,\n    (() => null) as MutableContextUpdate<T>,\n  ]);\n}\n\nexport function useMutableContext<T>(context: MutableContext<T>) {\n  return useContext(context) as MutableContextValue<T>;\n}\n","import React, { ReactNode, useState } from 'react';\n\nimport { createMutableContext } from 'utils/helpers';\n\nexport type Message = {\n  title: string;\n  content: ReactNode;\n  status: MessageStatus;\n};\n\ntype MessageStatus = 'INFO' | 'ALERT';\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst MessageContext = createMutableContext<Message[]>();\n\nexport const MessageProvider = function ({ children }: Props) {\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  return (\n    <MessageContext.Provider value={[messages, setMessages]}>\n      {children}\n    </MessageContext.Provider>\n  );\n};\n\nexport const MessageConsumer = MessageContext.Consumer;\n\nexport default MessageContext;\n","import React, { useEffect } from 'react';\nimport { useState, HTMLProps } from 'react';\n\nimport { createMutableContext } from 'utils/helpers';\nimport { initializeStore, saveStore, Store } from 'store';\n\nconst StoreContext = createMutableContext<Store>();\n\nexport function StoreProvider({ children }: HTMLProps<HTMLElement>) {\n  const [store, setStore] = useState(initializeStore);\n\n  useEffect(() => {\n    saveStore(store);\n  }, [store]);\n\n  return (\n    <StoreContext.Provider value={[store, setStore]}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n\nexport const StoreConsumer = StoreContext.Consumer;\n\nexport default StoreContext;\n","import { useContext } from 'react';\n\nimport DateContext from 'contexts/DateContext';\nimport MessageContext, { Message } from 'contexts/MessageContext';\nimport StoreContext from 'contexts/StoreContext';\nimport { useMutableContext } from 'utils/helpers';\nimport { Store } from 'store';\n\nexport const useDate = () => useContext(DateContext);\nexport const useMessages = () => useMutableContext<Message[]>(MessageContext);\nexport const useStore = () => useMutableContext<Store>(StoreContext);\n","import { format, formatISO, parseISO, startOfWeek } from 'date-fns';\nimport enUs from 'date-fns/locale/en-US';\nimport nb from 'date-fns/locale/nb';\nimport { getUserLocales } from 'get-user-locale';\n\nconst NO_LOCALES = ['no', 'nb', 'nn'];\nconst locale = getUserLocales().some((locale) => NO_LOCALES.includes(locale))\n  ? nb\n  : enUs;\n\nexport const WEEK_DAYS: Array<string> = [0, 1, 2, 3, 4, 5, 6].map((day) =>\n  locale.localize?.day(day, { width: 'abbreviated' })\n);\n\nexport function formatDate(date: Date, pattern: string): string {\n  return format(date, pattern, { locale });\n}\n\nexport function formatISODate(date: Date): string {\n  return formatISO(date);\n}\n\nexport function parseISODate(date: string): Date {\n  return parseISO(date);\n}\n\nexport function getStartOfWeek(date: Date) {\n  return startOfWeek(date, { locale });\n}\n","export const BROWN = '#8f6e64';\nexport const GREEN = '#a1b182';\nexport const GRAY_LIGHT = '#f6f6ff';\nexport const YELLOW_LIGHT = '#fff9ed';\n\nexport const PRIMARY = BROWN;\nexport const SECONARY = GREEN;\n","import styled from 'styled-components';\n\nimport * as colors from 'utils/colors';\n\nexport const Wrapper = styled.table`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const WeekRow = styled.tr`\n  display: flex;\n  justify-content: space-around;\n  border-bottom: 1px solid black;\n`;\n\nexport const WeekDay = styled.th`\n  flex: 1;\n  font-size: 1em;\n  font-weight: normal;\n  text-align: center;\n`;\n\nexport const Grid = styled.tbody`\n  padding: 1vh 0;\n`;\n\nexport const GridRow = styled.tr`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const DateWrapper = styled.td`\n  display: flex;\n  flex: 1;\n  justify-content: space-around;\n`;\n\nexport const LunarPart = styled.div`\n  font-size: 0.5em;\n  transform: translate(0, 0.5em);\n`;\n\nexport const SolarPart = styled.div`\n  transform: translate(0, -0.2em);\n`;\n\nexport type TileWrapperProps = {\n  isMonth: boolean;\n  isToday: boolean;\n  isVegetarian: boolean;\n};\n\nexport const TileWrapper = styled.div<TileWrapperProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 2em;\n  height: 2em;\n\n  ${({ isVegetarian }) =>\n    isVegetarian &&\n    `\n    font-weight: bold;\n    color: ${colors.SECONARY} !important;\n  `}\n\n  ${({ isToday }) =>\n    isToday &&\n    `\n    font-weight: bold;\n    border-radius: 500%;\n    color: ${colors.YELLOW_LIGHT};\n    background-color: ${colors.PRIMARY};\n  `}\n\n  ${({ isVegetarian, isToday }) =>\n    isVegetarian &&\n    isToday &&\n    `\n    text-shadow: -0.5px 0.5px 0.5px #3b3b3b, 0.5px 0.5px 0.5px #3b3b3b, 0 -0.5px 0.5px #3b3b3b;\n  `}\n\n  ${({ isMonth }) => !isMonth && `opacity: 0.5;`}\n`;\n","import React, { HTMLProps } from 'react';\nimport { isSameDay } from 'date-fns';\n\nimport { useDate } from 'hooks';\nimport { WEEK_DAYS } from 'utils/date';\nimport {\n  Wrapper,\n  WeekRow,\n  WeekDay,\n  Grid,\n  GridRow,\n  DateWrapper,\n  LunarPart,\n  SolarPart,\n  TileWrapper,\n} from './styled';\nimport { Week, Day } from '../../../../domain';\n\ntype CalendarBodyProps = {\n  weeks: Array<Week>;\n};\n\nfunction CalendarBody({ weeks }: CalendarBodyProps) {\n  return (\n    <Wrapper>\n      <WeekdayRow />\n      <Grid>\n        {weeks.map((week, i) => (\n          <GridRow key={i}>\n            {week.map((day, j) => (\n              <DateWrapper key={j}>\n                <DayTile day={day} />\n              </DateWrapper>\n            ))}\n          </GridRow>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nfunction WeekdayRow() {\n  return (\n    <thead>\n      <WeekRow>\n        {WEEK_DAYS.map((day, i) => (\n          <WeekDay key={i}>{day}</WeekDay>\n        ))}\n      </WeekRow>\n    </thead>\n  );\n}\n\ntype DayTileProps = {\n  day: Day;\n};\n\nfunction DayTile({ day }: DayTileProps) {\n  const date = useDate();\n  return (\n    <Tile\n      isToday={isSameDay(day.solarDate, date)}\n      isVegetarianDay={day.isVegetarianDay}\n      isMonth={day.isInMonth}\n    >\n      <LunarPart aria-label=\"Lunar date\">{day.lunarDay}</LunarPart>\n      <SolarPart aria-label=\"Solar date\">{day.solarDay}</SolarPart>\n    </Tile>\n  );\n}\n\ntype TileProps = {\n  isToday: boolean;\n  isVegetarianDay: boolean;\n  isMonth: boolean;\n} & HTMLProps<HTMLElement>;\n\nfunction Tile({ isToday, isVegetarianDay, isMonth, children }: TileProps) {\n  return (\n    <TileWrapper\n      isMonth={isMonth}\n      isToday={isToday}\n      isVegetarian={isVegetarianDay}\n    >\n      {children}\n    </TileWrapper>\n  );\n}\n\nexport default CalendarBody;\n","import Body from './Body';\n\nexport default Body;\n","import styled from 'styled-components';\n\nimport * as colors from 'utils/colors';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  background: white;\n  padding: 0.75em 1em;\n  border: 1px solid #dbdbdb;\n  border-radius: 4px;\n  color: #363636;\n  font-size: 0.75em;\n  text-align: center;\n  cursor: pointer;\n\n  :hover {\n    background-color: ${colors.GRAY_LIGHT};\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const Year = styled.h1`\n  font-size: 1em;\n  font-weight: normal;\n`;\n\nexport const Month = styled.h2`\n  font-size: 1.5em;\n  font-weight: bold;\n`;\n","import React from 'react';\n\nimport { Wrapper, Button, TitleWrapper, Year, Month } from './styled';\nimport { formatDate } from 'utils/date';\n\ntype Props = {\n  year: number;\n  month: number;\n  onPrevMonth: () => void;\n  onNextMonth: () => void;\n};\n\nfunction Header({ year, month, onPrevMonth, onNextMonth }: Props) {\n  const formattedYear = formatDate(new Date(year, 0, 1), 'yyyy');\n  const formattedMonth = formatDate(new Date(2000, month, 1), 'LLLL');\n  return (\n    <Wrapper>\n      <Button onClick={onPrevMonth}>&lt;</Button>\n      <TitleWrapper>\n        <Year>{formattedYear}</Year>\n        <Month>{formattedMonth}</Month>\n      </TitleWrapper>\n      <Button onClick={onNextMonth}>&gt;</Button>\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  align-self: flex-end;\n  padding: 0.4em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 4em;\n  line-height: 0.5em;\n\n  :hover {\n    background-color: rgb(0, 0, 0, 0.1);\n    border-radius: 4px;\n  }\n`;\n","import React from 'react';\n\nimport { Button } from './styled';\n\ntype Props = {\n  onClick: () => void;\n};\n\nfunction OpenSettingsButton({ onClick }: Props) {\n  return <Button onClick={onClick}>⚙</Button>;\n}\n\nexport default OpenSettingsButton;\n","import OpenSettingsButton from './OpenSettingsButton';\n\nexport default OpenSettingsButton;\n","import styled from 'styled-components';\n\nimport * as colors from 'utils/colors';\n\nexport const Header = styled.header`\n  margin-bottom: 1em;\n  padding-bottom: 0.5em;\n  border-bottom: 1px solid #3b3b3d;\n`;\n\nexport const CloseButtonWrapper = styled.aside`\n  position: absolute;\n  top: 1.8em;\n  right: 1.5em;\n`;\n\nexport const CloseButton = styled.button`\n  padding: 0.5em 0.75em;\n  background-color: white;\n  border: 1px solid #dbdbdb;\n  border-radius: 4px;\n\n  :hover {\n    background-color: ${colors.GRAY_LIGHT};\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nimport * as colors from 'utils/colors';\n\nexport const StyleOverrides = createGlobalStyle`\n  .ReactModal__Overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(10, 10, 10, 0.86);\n    opacity: 0;\n    transition: opacity 0.3s ease-out;\n\n    &--after-open {\n      opacity: 1;\n    }\n\n    &--before-close {\n      opacity: 0;\n    }\n  }\n\n  .ReactModal__Content {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    right: auto;\n    bottom: auto;\n    min-width: 200px;\n    padding: 1.5em;\n    background-color: ${colors.YELLOW_LIGHT};\n    border: 1px solid ${colors.PRIMARY};\n    transform: translate(-50%, -50%);\n    overflow: auto;\n    -webkit-overflow-scrolling: initial !important;\n  }\n`;\n","import React, { ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { Header, CloseButtonWrapper, CloseButton } from './styled';\nimport { StyleOverrides } from './overrides';\n\nReactModal.setAppElement('#root');\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  heading: string;\n  children: ReactNode;\n};\n\nfunction Modal({ isOpen, onClose, heading, children }: ModalProps) {\n  return (\n    <>\n      <StyleOverrides />\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        overlayClassName=\"ReactModal__Overlay\"\n        className=\"ReactModal__Content\"\n        closeTimeoutMS={300}\n        contentLabel={heading}\n      >\n        <Header>\n          <h2>{heading}</h2>\n        </Header>\n        <CloseButtonWrapper>\n          <CloseButton onClick={onClose}>X</CloseButton>\n        </CloseButtonWrapper>\n        {children}\n      </ReactModal>\n    </>\n  );\n}\n\nexport default Modal;\n","import Modal from './Modal';\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n  margin-bottom: 0.25em;\n`;\n\nexport const Select = styled.select`\n  font-size: 1em;\n  padding: 0.5em;\n  border: 1px solid #3b3b3b;\n  border-radius: 4px;\n`;\n","import React from 'react';\n\nimport Modal from 'components/Modal';\nimport { useStore } from 'hooks';\nimport {\n  getVegetarianScheduleByName,\n  getVegetarianSchedules,\n  setVegetarianSchedule,\n  Settings,\n  VegetarianSchedule,\n} from 'store';\nimport { Form, Label, Select } from './styled';\n\ntype Props = {\n  visible: boolean;\n  onHide: () => void;\n};\n\nfunction SettingsModal({ visible, onHide }: Props) {\n  const [store, setStore] = useStore();\n  return (\n    <Modal isOpen={visible} onClose={onHide} heading=\"Settings\">\n      <Form>\n        <Label>Schedule</Label>\n        <VegetarianScheduleSelect\n          settings={store.settings}\n          onUpdate={(settings) => setStore({ ...store, settings })}\n        />\n      </Form>\n    </Modal>\n  );\n}\n\ntype VegetarianScheduleSelectProps = {\n  settings: Settings;\n  onUpdate: (settings: Settings) => void;\n};\n\nfunction VegetarianScheduleSelect({\n  settings,\n  onUpdate,\n}: VegetarianScheduleSelectProps) {\n  return (\n    <Select\n      value={settings.schedule.name}\n      onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n        onUpdate(\n          newSettingsFromSchedule(\n            getVegetarianScheduleByName(e.target.value),\n            settings\n          )\n        )\n      }\n    >\n      {getVegetarianSchedules().map(({ name }, i) => (\n        <option key={i}>{name}</option>\n      ))}\n    </Select>\n  );\n}\n\nfunction newSettingsFromSchedule(\n  schedule: VegetarianSchedule | undefined,\n  currentSettings: Settings\n): Settings {\n  if (schedule) {\n    setVegetarianSchedule(schedule);\n    return {\n      ...currentSettings,\n      schedule: schedule,\n    };\n  }\n  return currentSettings;\n}\n\nexport default SettingsModal;\n","import SettingsModal from './SettingsModal';\n\nexport default SettingsModal;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: space-around;\n  padding: 2vh;\n  font-size: calc(1rem + 1vw);\n`;\n","import { addDays, getDate, getMonth, getYear } from 'date-fns';\nimport { computeDateToLunarDate, LunarDate } from 'amlich.js';\n\nimport { getStartOfWeek } from 'utils/date';\nimport { VegetarianSchedule } from 'store';\n\nexport type CalendarView = {\n  year: number;\n  month: number;\n  weeks: Array<Week>;\n};\n\nexport type Week = Array<Day>;\n\nexport type Day = {\n  solarDate: Date;\n  lunarDay: number;\n  solarDay: number;\n  isVegetarianDay: boolean;\n  isInMonth: boolean;\n};\n\nexport function createCalendarView(\n  year: number,\n  month: number,\n  schedule: VegetarianSchedule\n): CalendarView {\n  return {\n    year,\n    month,\n    weeks: createWeeks(year, month, schedule),\n  };\n}\n\nfunction createWeeks(\n  year: number,\n  month: number,\n  schedule: VegetarianSchedule\n): Array<Week> {\n  let incDate = getStartOfWeek(new Date(year, month, 1));\n  const weeks: Array<Week> = [];\n  for (let i = 0; i < 6; i++) {\n    const week: Week = [];\n    for (let j = 0; j < 7; j++, incDate = addDays(incDate, 1)) {\n      const isInMonth = getMonth(incDate) === month;\n      const day = createDay(incDate, schedule, isInMonth);\n      week.push(day);\n    }\n    weeks.push(week);\n  }\n  return weeks;\n}\n\nfunction createDay(\n  date: Date,\n  schedule: VegetarianSchedule,\n  isInMonth: boolean\n): Day {\n  const year = getYear(date);\n  const month = getMonth(date);\n  const lunarDate = computeDateToLunarDate(getDate(date), month + 1, year, 7);\n  const has30Days = of30Days(lunarDate, date);\n  return {\n    solarDate: date,\n    lunarDay: lunarDate.lunarDay,\n    solarDay: getDate(date),\n    isVegetarianDay: schedule.pred(lunarDate.lunarDay, has30Days),\n    isInMonth,\n  };\n}\n\nfunction of30Days(lunarDate: LunarDate, gregorianDate: Date): boolean {\n  const diff = 30 - lunarDate.lunarDay;\n  const deltaGregorianDate = addDays(gregorianDate, diff);\n  const endLunarDate = computeDateToLunarDate(\n    getDate(deltaGregorianDate),\n    getMonth(deltaGregorianDate) + 1,\n    getYear(deltaGregorianDate),\n    1\n  );\n  return endLunarDate.lunarDay === 30;\n}\n","import React, { useState, useMemo } from 'react';\nimport {\n  getYear,\n  getMonth,\n  startOfMonth,\n  subMonths,\n  addMonths,\n} from 'date-fns';\n\nimport Body from './components/Body';\nimport Header from './components/Header';\nimport OpenSettingsButton from './components/OpenSettingsButton';\nimport SettingsModal from './components/SettingsModal';\nimport { Wrapper } from './styled';\nimport { useStore } from 'hooks';\nimport { createCalendarView } from '../../domain';\n\nconst initialPivot = startOfMonth(new Date());\n\nfunction Calendar() {\n  const [pivot, setPivot] = useState(initialPivot);\n  const [showSettings, setShowSettings] = useState(false);\n\n  const [store] = useStore();\n  const { schedule } = store.settings;\n  const { year, month, weeks } = useMemo(\n    () => createCalendarView(getYear(pivot), getMonth(pivot), schedule),\n    [pivot, schedule]\n  );\n\n  return (\n    <Wrapper>\n      <Header\n        year={year}\n        month={month}\n        onPrevMonth={() => setPivot(subMonths(pivot, 1))}\n        onNextMonth={() => setPivot(addMonths(pivot, 1))}\n      />\n      <Body weeks={weeks} />\n      <SettingsModal\n        visible={showSettings}\n        onHide={() => setShowSettings(false)}\n      />\n      <OpenSettingsButton onClick={() => setShowSettings(!showSettings)} />\n    </Wrapper>\n  );\n}\n\nexport default Calendar;\n","import React, { HTMLProps, ReactType } from 'react';\n\ntype Props = {\n  direction?: 'row' | 'column';\n  flex?: number;\n  justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-around' | 'space-between';\n  alignItems?: 'flex-start' | 'flex-end' | 'center' | 'space-around' | 'space-between';\n  tag?: ReactType;\n} & HTMLProps<HTMLDivElement>;\n\nfunction Flex({\n  direction,\n  flex,\n  justifyContent,\n  alignItems,\n  style,\n  tag = 'div',\n  ...htmlProps\n}: Props): JSX.Element {\n  return React.createElement(tag, {\n    style: {\n      display: 'flex',\n      flexDirection: direction,\n      flex,\n      justifyContent,\n      alignItems,\n      ...style\n    },\n    ...htmlProps\n  });\n}\n\nexport default Flex;\n","import * as Sentry from '@sentry/browser';\n\nimport { isProduction } from './environment';\n\nexport function initializeLogging() {\n  if (isProduction()) {\n    Sentry.init({\n      dsn: 'https://db09e878f14748c5ac6e6c24b94b78ca@sentry.io/1723548'\n    });\n  }\n}\n\nexport function logError(error: Error) {\n  Sentry.captureException(error)\n}\n\nexport function logWarning(message: string) {\n  Sentry.captureMessage(message, Sentry.Severity.Warning);\n}\n\nexport function logInfo(message: string) {\n  Sentry.captureMessage(message, Sentry.Severity.Info);\n}\n\nexport function logDebug(message: string) {\n  Sentry.captureMessage(message, Sentry.Severity.Debug);\n}\n\nexport function logTrace(message: string) {\n  Sentry.captureMessage(message, Sentry.Severity.Log);\n}\n","import { getEnvironment } from './environment-variables';\n\nexport function isProduction() {\n  return getEnvironment() === 'production';\n}\n\nexport function isDevelopment() {\n  return getEnvironment() === 'development';\n}\n","import React, { ReactNode } from 'react';\n\nimport Flex from './Flex';\nimport { logError, initializeLogging } from 'utils/logging';\nimport { resetLocal, navigateTo } from 'utils/browser';\nimport { InvalidAppVersion } from 'store';\n\ntype ErrorBoundaryProps = {\n  children: ReactNode;\n};\n\ntype ErrorBoundaryState = {\n  error: Error | null;\n};\n\nclass ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      error: null,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  componentDidMount() {\n    initializeLogging();\n  }\n\n  componentDidCatch(error: Error) {\n    logError(error);\n  }\n\n  render() {\n    const { error } = this.state;\n\n    if (error === null) {\n      return this.props.children;\n    }\n\n    if (error instanceof InvalidAppVersion) {\n      resetLocal();\n      return <RedirectionErrorView />;\n    }\n\n    return <GenericErrorView />;\n  }\n}\n\nfunction GenericErrorView() {\n  return (\n    <Container>\n      <Header title=\"SOMETHING WENT WRONG\" />\n      <p>Please try again later.</p>\n    </Container>\n  );\n}\n\ntype RedirectionErrorViewProps = {\n  targetUrl?: string;\n};\n\nfunction RedirectionErrorView({ targetUrl = '.' }: RedirectionErrorViewProps) {\n  navigateTo(targetUrl);\n\n  return (\n    <Container>\n      <Header title=\"PLEASE WAIT\" />\n      <p>Currently redirecting you...</p>\n    </Container>\n  );\n}\n\ntype ContainerProps = {\n  children: ReactNode;\n};\n\nfunction Container({ children }: ContainerProps) {\n  return (\n    <Flex\n      direction=\"column\"\n      flex={1}\n      justifyContent=\"space-around\"\n      alignItems=\"center\"\n      style={{ height: '45vh', padding: '2vh', textAlign: 'center' }}\n      tag=\"main\"\n    >\n      {children}\n    </Flex>\n  );\n}\n\ntype HeaderProps = {\n  title: string;\n};\n\nfunction Header({ title }: HeaderProps) {\n  return <h1 style={{ fontSize: '2rem', fontWeight: 'bold' }}>{title}</h1>;\n}\n\nexport default ErrorBoundary;\n","import styled from 'styled-components';\n\nimport * as colors from 'utils/colors';\n\nexport const Wrapper = styled.section`\n  padding: 0.3em;\n  background-color: ${colors.BROWN};\n  color: ${colors.GRAY_LIGHT};\n  white-space: pre-wrap;\n`;\n\nexport const MessageWrapper = styled.article`\n  & > p {\n    display: inline;\n  }\n\n  & > a {\n    color: white;\n    text-decoration: underline;\n  }\n`;\n\nexport const Title = styled.header`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n","import React from 'react';\n\nimport { useMessages } from 'hooks';\nimport { Wrapper, MessageWrapper, Title } from './styled';\n\nfunction MessageBar() {\n  const [messages] = useMessages();\n\n  if (messages.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      {messages.map(({ title, content }, i) => (\n        <MessageWrapper key={i}>\n          <Title>{title}:</Title> {content}\n        </MessageWrapper>\n      ))}\n    </Wrapper>\n  );\n}\n\nexport default MessageBar;\n","import MessageBar from './MessageBar';\n\nexport default MessageBar;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport type ServiceWorkerRegistrationConfig = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: ServiceWorkerRegistrationConfig) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    const registerSW = () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    };\n\n    if (document.readyState === 'loading') {\n      window.addEventListener('load', registerSW);\n    } else {\n      registerSW();\n    }\n  }\n}\n\nfunction registerValidSW(\n  swUrl: string,\n  config?: ServiceWorkerRegistrationConfig\n) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(\n  swUrl: string,\n  config?: ServiceWorkerRegistrationConfig\n) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, ReactNode } from 'react';\n\nimport { useMessages } from 'hooks';\nimport { Message } from 'contexts';\nimport { getAppName } from 'utils/environment-variables';\nimport * as serviceWorker from 'utils/serviceWorker';\n\ntype Props = {\n  children: ReactNode;\n};\n\nfunction ServiceWorker({ children }: Props) {\n  const [messages, setMessages] = useMessages();\n\n  useEffect(() => {\n    serviceWorker.register({\n      onUpdate: () => setMessages([...messages, createUpdateMessage()]),\n    });\n  });\n\n  return <>{children}</>;\n}\n\nfunction createUpdateMessage(): Message {\n  return {\n    title: 'Update',\n    content: (\n      <p>\n        There is a new version of {getAppName()} available. To update, please\n        close all open tabs of {getAppName()} before visiting this page again.\n      </p>\n    ),\n    status: 'INFO',\n  };\n}\n\nexport default ServiceWorker;\n","export default __webpack_public_path__ + \"static/media/logo.a2373f5a.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport * as colors from 'utils/colors';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: ${colors.YELLOW_LIGHT};\n    font-size: 16px;\n    min-width: 300px;\n    text-rendering: optimizeLegibility;\n    box-sizing: border-box;\n    overflow: hidden;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-text-size-adjust: 100%;\n  }\n\n  body {\n    color: #4a4a4a;\n    font-size: 1em;\n    line-height: 1.5;\n  }\n\n  body, button, input, select, textarea {\n    font-family: BlinkMacSystemFont,-apple-system,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Helvetica,Arial,sans-serif;\n  }\n\n  a {\n    color: ${colors.PRIMARY};\n    text-decoration: none;\n  }\n\n  blockquote, body, dd, dl, dt, fieldset, figure, h1, h2, h3, h4, h5, h6, hr, html, iframe, legend, li, ol, p, pre, textarea, ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  & main {\n    box-sizing: border-box;\n  }\n\n  & .logo {\n    height: 70px;\n    margin: 10px;\n  }\n\n  & .credits {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  & footer {\n    display: flex !important;\n    flex-direction: column;\n    text-align: center;\n    padding: 2vh;\n    background-color: transparent;\n  }\n\n  & footer p {\n    font-size: x-small;\n    white-space: pre-wrap;\n  }\n`;\n","import React, { ReactNode } from 'react';\n\nimport Calendar from 'components/Calendar';\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport MessageBar from 'components/MessageBar';\nimport ServiceWorker from 'components/ServiceWorker';\nimport { DateProvider } from 'contexts/DateContext';\nimport { StoreProvider } from 'contexts/StoreContext';\nimport logo from 'assets/images/logo.svg';\n\nimport { MessageProvider } from 'contexts';\nimport { useStore } from 'hooks';\nimport GlobalStyle from './GlobalStyle';\nimport { Wrapper } from './styled';\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <Provider>\n          <ServiceWorker>\n            <Main />\n            <Footer />\n          </ServiceWorker>\n        </Provider>\n      </ErrorBoundary>\n    </Wrapper>\n  );\n};\n\nfunction Provider({ children }: { children: ReactNode }) {\n  return (\n    <MessageProvider>\n      <StoreProvider>\n        <DateProvider>{children}</DateProvider>\n      </StoreProvider>\n    </MessageProvider>\n  );\n}\n\nfunction Main() {\n  return (\n    <main>\n      <MessageBar />\n      <Calendar />\n    </main>\n  );\n}\n\nfunction Footer() {\n  const [{ version }] = useStore();\n  return (\n    <footer>\n      <img className=\"logo\" alt=\"Logo with a bodhi leaf\" src={logo} />\n      <div className=\"credits\">\n        <p>\n          <em>Bodhi Calendar</em> is an{' '}\n          <a href=\"https://github.com/anhtin/bodhi-calendar\">\n            open-source project\n          </a>{' '}\n          created by <a href=\"https://github.com/anhtin\">Tin Anh Nguyen</a>.\n        </p>\n        <p>You are currently running version {version}.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}